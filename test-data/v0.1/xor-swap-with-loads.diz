Dumbly xor-swap registers A, loaded from 0x0110 and B, loaded from an immediate

0. A := *0x0110
1. B := 0x69
3. A := A XOR B
5. B := B XOR A
7. A := A XOR B

=>

0. *0x0110 -> a

1. 0x69 -> b

2. a -> x
2. b -> y

3. x ^ y -> s
3. s -> a

4. a -> y
4. b -> x

5. x ^ y -> s
5. s -> b

6. a -> x
6. b -> y

7. x ^ y -> s
7. s -> a

=>

0. LOAD IND A
0. 0x0110

1. LOAD IMM B
1. 0x69

2. MOVE A X
2. MOVE B Y

3. ALU XOR
3. MOVE S A

4. MOVE A Y
4. MOVE B X

5. ALU XOR
5. MOVE S B

6. MOVE A X
6. MOVE B Y

7. ALU XOR
7. MOVE S A

8. HALT

=>

0. 0b0010 0 100
0. 0x0110

1. 0b0001 1 101
1. 0x69

2. 0b01 100 010
2. 0b01 101 011

3. 0b0011 0101
3. 0b01 001 100

4. 0b01 100 011
4. 0b01 101 010

5. 0b0011 0101
5. 0b01 001 101

6. 0b01 100 010
6. 0b01 101 011

7. 0b0011 0101
7. 0b01 001 100

8. 0b1111 1111

=>

0. 2 4
0. 0110

1. 1 D
1. 69

2. 6 2
2. 6 B

3. 3 5
3. 4 C

4. 6 3
4. 6 A

5. 3 5
5. 4 D

6. 6 2
6. 6 B

7. 3 5
7. 4 C

6. F F

=>

24
0110

1D
69

62
6B

35
4C

63
6A

35
4D

62
6B

35
4C

FF
