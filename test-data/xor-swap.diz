Dumbly xor-swap registers A and B

1. A := A XOR B
3. B := B XOR A
5. A := A XOR B

=>

0. a -> x
0. b -> y

1. x ^ y -> s
1. s -> a

2. a -> y
2. b -> x

3. x ^ y -> s
3. s -> b

4. a -> x
4. b -> y

5. x ^ y -> s
5. s -> a

=>

0. MOVE A X
0. MOVE B Y

1. ALU XOR
1. MOVE S A

2. MOVE A Y
2. MOVE B X

3. ALU XOR
3. MOVE S B

4. MOVE A X
4. MOVE B Y

5. ALU XOR
5. MOVE S A

6. HALT

=>

0. 0b01 100 010
0. 0b01 101 011

1. 0b0011 0101
1. 0b01 001 100

2. 0b01 100 011
2. 0b01 101 010

3. 0b0011 0101
3. 0b01 001 101

4. 0b01 100 010
4. 0b01 101 011

5. 0b0011 0101
5. 0b01 001 100

6. 0b1111 1111

=>

0. 6 2
0. 6 B

1. 3 5
1. 4 C

2. 6 3
2. 6 A

3. 3 5
3. 4 D

4. 6 2
4. 6 B

5. 3 5
5. 4 C

6. F F

=>

62
6B

35
4C

63
6A

35
4D

62
6B

35
4C

FF
